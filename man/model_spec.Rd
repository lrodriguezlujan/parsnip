% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_object_docs.R
\name{model_spec}
\alias{model_spec}
\title{Model Specification Information}
\description{
An object with class "model_spec" is a container for
information about a model that will be fit.
}
\details{
The main elements of the object are:
\itemize{
\item \code{args}: A vector of the main arguments for the model. The
names of these arguments may be different form their
counterparts n the underlying model function. For example, for a
\code{glmnet} model, the argument name for the amount of the penalty
is called "penalty" instead of "lambda" to make it more
general and usable across different types of models (and to not
be specific to a particular model function). The elements of
\code{args} can be quoted expressions or \code{varying()}. If left to
their defaults (\code{NULL}), the arguments will use the underlying
model functions default value.
\item \code{other}: An optional vector of model-function-specific
parameters. As with \code{args}, these can also be quoted or
\code{varying()}.
\item \code{mode}: The type of model, such as "regression" or
"classification". Other modes will be added once the package
adds more functionality.
\item \code{method}: This is a slot that is filled in later by the
model's constructor function. It generally contains lists of
information that are used to create the fit and prediction code
as well as required packages and similar data.
\item \code{engine}: This character string declares exactly what
software will be used. It can be a package name or a technology
type.
}

This class and structure is the basis for how \pkg{parsnip}
stores model objects prior to seeing the data.
}
